scalar DateTime

enum Level {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

type Question {
  id: ID!
  level: Level!
  title: String!
  code: String!
  answers: [Answer!]!
  correctAnswer: Answer!
}

type Answer {
  id: ID!
  text: String!
}

input ResultInput {
  questionId: ID!
  answerId: ID
}

type Result {
  id: ID!
  question: Question!
  answer: Answer
  correctAnswer: Answer!
}

type ResultSet {
  id: ID!
  userId: ID!
  dateTime: DateTime!
  results: [Result!]!
  correctAnswersCount: Int!
}

type User {
  id: ID!
  email: String!
  name: String!
  avatar: String
}

type AuthPayload {
  user: User!
  token: String!
}

type Leaderboard {
  users: [User!]!
}

type Query {
  me: User
  questions(level: Level): [Question]!
  question(id: ID!): Question
  answer(id: ID!): Answer
  results: [Result!]
  resultSets: [ResultSet!]
  resultSet(id: ID!): ResultSet
  result(id: ID!): Result
  user(email: String!): User
  leaderboard: Leaderboard
}

type Mutation {
  createResultSet(data: [ResultInput!]!): ResultSet!
  authorize(code: String!): AuthPayload!
}
